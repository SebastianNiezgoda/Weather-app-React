{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactProjekt\\\\weather-app\\\\src\\\\components\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [forecast, setForecast] = useState(null);\n  const API_KEY = \"9be36664e75a27c37390d54f6b3398f6\";\n  const fetchForecast = async () => {\n    if (!city) return;\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`);\n      const dailyForecast = response.data.list.reduce((acc, item) => {\n        const date = new Date(item.dt * 1000).toLocaleDateString();\n        if (!acc[date]) {\n          acc[date] = {\n            temp: [],\n            humidity: [],\n            descriptions: []\n          };\n        }\n        acc[date].temp.push(item.main.temp);\n        acc[date].humidity.push(item.main.humidity);\n        acc[date].descriptions.push(item.weather[0].description);\n        return acc;\n      }, {});\n      const summarizedForecast = Object.keys(dailyForecast).map(date => {\n        const temps = dailyForecast[date].temp;\n        const humidities = dailyForecast[date].humidity;\n        const descriptions = dailyForecast[date].descriptions;\n        return {\n          date,\n          temp: (temps.reduce((a, b) => a + b, 0) / temps.length).toFixed(1),\n          humidity: (humidities.reduce((a, b) => a + b, 0) / humidities.length).toFixed(1),\n          description: descriptions.sort((a, b) => descriptions.filter(v => v === a).length - descriptions.filter(v => v === b).length).pop()\n        };\n      });\n      setForecast(summarizedForecast);\n    } catch (error) {\n      alert(\"City not found\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Check the Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter city name\",\n      value: city,\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchForecast,\n      children: \"Show Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexWrap: \"wrap\"\n        },\n        children: forecast.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            padding: \"10px\",\n            margin: \"5px\",\n            borderRadius: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: item.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Average Temperature: \", item.temp, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Average Humidity: \", item.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Most Common Description: \", item.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"RMNoU4pCXFQq0W6XY5bQloETU2s=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Weather","_s","city","setCity","forecast","setForecast","API_KEY","fetchForecast","response","get","dailyForecast","data","list","reduce","acc","item","date","Date","dt","toLocaleDateString","temp","humidity","descriptions","push","main","weather","description","summarizedForecast","Object","keys","map","temps","humidities","a","b","length","toFixed","sort","filter","v","pop","error","alert","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","display","justifyContent","flexWrap","index","border","margin","borderRadius","_c","$RefreshReg$"],"sources":["E:/ReactProjekt/weather-app/src/components/Weather.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Weather = () => {\r\n  const [city, setCity] = useState(\"\");\r\n  const [forecast, setForecast] = useState(null);\r\n  const API_KEY = \"9be36664e75a27c37390d54f6b3398f6\";\r\n\r\n  const fetchForecast = async () => {\r\n    if (!city) return;\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\r\n      );\r\n      \r\n      const dailyForecast = response.data.list.reduce((acc, item) => {\r\n        const date = new Date(item.dt * 1000).toLocaleDateString();\r\n        if (!acc[date]) {\r\n          acc[date] = { temp: [], humidity: [], descriptions: [] };\r\n        }\r\n        acc[date].temp.push(item.main.temp);\r\n        acc[date].humidity.push(item.main.humidity);\r\n        acc[date].descriptions.push(item.weather[0].description);\r\n        return acc;\r\n      }, {});\r\n\r\n      const summarizedForecast = Object.keys(dailyForecast).map(date => {\r\n        const temps = dailyForecast[date].temp;\r\n        const humidities = dailyForecast[date].humidity;\r\n        const descriptions = dailyForecast[date].descriptions;\r\n\r\n        return {\r\n          date,\r\n          temp: (temps.reduce((a, b) => a + b, 0) / temps.length).toFixed(1),\r\n          humidity: (humidities.reduce((a, b) => a + b, 0) / humidities.length).toFixed(1),\r\n          description: descriptions.sort((a, b) =>\r\n            descriptions.filter(v => v === a).length - descriptions.filter(v => v === b).length\r\n          ).pop()\r\n        };\r\n      });\r\n      \r\n      setForecast(summarizedForecast);\r\n    } catch (error) {\r\n      alert(\"City not found\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h2>Check the Weather Forecast</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter city name\"\r\n        value={city}\r\n        onChange={(e) => setCity(e.target.value)}\r\n      />\r\n      <button onClick={fetchForecast}>Show Forecast</button>\r\n\r\n      {forecast && (\r\n        <div>\r\n          <h3>{city}</h3>\r\n          <div style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}>\r\n            {forecast.map((item, index) => (\r\n              <div key={index} style={{ border: \"1px solid #ccc\", padding: \"10px\", margin: \"5px\", borderRadius: \"5px\" }}>\r\n                <p><strong>{item.date}</strong></p>\r\n                <p>Average Temperature: {item.temp}Â°C</p>\r\n                <p>Average Humidity: {item.humidity}%</p>\r\n                <p>Most Common Description: {item.description}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}