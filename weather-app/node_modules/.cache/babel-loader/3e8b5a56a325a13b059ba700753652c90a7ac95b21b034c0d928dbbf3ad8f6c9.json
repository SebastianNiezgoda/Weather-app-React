{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactProjekt\\\\weather-app\\\\src\\\\components\\\\GeoWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"9be36664e75a27c37390d54f6b3398f6\";\nconst GeoWeather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [locationError, setLocationError] = useState(null);\n  const getWeatherByLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        fetchWeather(latitude, longitude);\n      }, error => {\n        setLocationError(\"Nie można uzyskać dostępu do lokalizacji.\");\n      });\n    } else {\n      setLocationError(\"Twoja przeglądarka nie obsługuje geolokalizacji.\");\n    }\n  };\n  const fetchWeather = async (lat, lon) => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}&lang=pl`);\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      console.error(\"Błąd podczas pobierania danych pogodowych:\", error);\n    }\n  };\n  useEffect(() => {\n    getWeatherByLocation();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather based on your location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), locationError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: locationError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this), weatherData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", weatherData.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : !locationError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0141adowanie danych pogodowych...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(GeoWeather, \"DoHdsvfZt5ABWL9uw1eBq4Lte54=\");\n_c = GeoWeather;\nexport default GeoWeather;\nvar _c;\n$RefreshReg$(_c, \"GeoWeather\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_KEY","GeoWeather","_s","weatherData","setWeatherData","locationError","setLocationError","getWeatherByLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","fetchWeather","error","lat","lon","response","fetch","data","json","console","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","color","name","main","temp","weather","description","humidity","_c","$RefreshReg$"],"sources":["E:/ReactProjekt/weather-app/src/components/GeoWeather.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst API_KEY = \"9be36664e75a27c37390d54f6b3398f6\"; \r\n\r\nconst GeoWeather = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [locationError, setLocationError] = useState(null);\r\n\r\n  \r\n  const getWeatherByLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          fetchWeather(latitude, longitude);\r\n        },\r\n        (error) => {\r\n          setLocationError(\"Nie można uzyskać dostępu do lokalizacji.\");\r\n        }\r\n      );\r\n    } else {\r\n      setLocationError(\"Twoja przeglądarka nie obsługuje geolokalizacji.\");\r\n    }\r\n  };\r\n\r\n  \r\n  const fetchWeather = async (lat, lon) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}&lang=pl`\r\n      );\r\n      const data = await response.json();\r\n      setWeatherData(data);\r\n    } catch (error) {\r\n      console.error(\"Błąd podczas pobierania danych pogodowych:\", error);\r\n    }\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    getWeatherByLocation();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ marginTop: \"20px\" }}>\r\n      <h2>Weather based on your location</h2>\r\n      {locationError && <p style={{ color: \"red\" }}>{locationError}</p>}\r\n      {weatherData ? (\r\n        <div>\r\n          <h3>{weatherData.name}</h3>\r\n          <p>Temperature: {weatherData.main.temp}°C</p>\r\n          <p>Description: {weatherData.weather[0].description}</p>\r\n          <p>Humidity: {weatherData.main.humidity}%</p>\r\n        </div>\r\n      ) : (\r\n        !locationError && <p>Ładowanie danych pogodowych...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeoWeather;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}